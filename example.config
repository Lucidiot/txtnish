# Example config for txtnish
# This is a normal shell file that gets sourced by txtnish
 
# How many tweets should be shown in timeline
limit=20

# Command to wrap long tweets in timeline
formatter="fmt"

# Should the timeline be shown in a pager
use_pager=1

# Use ANSI colors
use_color=1

# Always update all feeds before showing tweets. If you set this variable to 0,
# you need to update manually with the update command.
always_update=1

# How to sort tweets. This can be either ascending or descinding. ascending
# starts with the oldest tweet, descending with the newest.
sort_order=descending

# Location of your twtxt file. The tweet subcommand will append to this file.
twtfile=~/twtxt.txt

# Send your nick and twturl in the http user-agent field
disclose_identity=0

# HTTP backend to use. You can choose between curl and wget.
http_backend=wget

# How many parallel http processes to use
max_procs=20

# Editor to tweet
editor=vi

# Pager to use, use_pager has to be also set to one
pager="less -R"

# Use xargs with -P. If you have a xargs without -P (it's not part of POSIX)
# and disable xargs_parallel, you probably also want to set always_update to 0,
# otherwise any command will take a long time.
xargs_parallel=1

# If set to 1, sign the twtfile with pgp. In case you are also overwriting
# the `post_tweet_hook` note that this will create a signed file in a
# temporary directory and change the value of `twtfile` accordingly.
sign_twtfile=0

# If these paramters are set, txtnish will transfer the twtfile with ftp using
# the given user and hostname. The paramter ftp_remote_name is optional, if not
# given the basename of your twtfile is used.
ftp_user=$user
ftp_host=localhost
ftp_remote_name=twtxt.txt

# If these paramters are set, txtnish will transfer the twtfile with scp using
# the given user and hostname. The paramter scp_remote_name is optional, if not
# given the basename of your twtfile is used.
scp_user=$user
scp_host=localhost
scp_remote_name=twtxt.txt

# post_tweet_hook is called after txtnish has appended new tweets to your
# twtfile. It's a good place to uploade your file somewhere.
post_tweet_hook () {
	gist -u ID -f "$twtfile"
}
